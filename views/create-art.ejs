<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create New Article</title>
    <link rel="stylesheet" href="/style.css">
</head>
<body>
    <header>
        <nav>
            <ul>
                <li><a href="/articles">Accueil</a></li>
                <li><a href="/users/logout">Se déconnecter</a></li>
            </ul>
        </nav>
    </header>
    <div class="page-content">
        <div class="search-section">
            <input type="text" id="gameSearch" placeholder="Search for a game">
            <button type="button" onclick="searchGames()">Search</button>
        </div>

        <div id="searchResults"></div>

        <div class="form-wrapper">
            <div class="container-form">
                <h1>Create New Article</h1>
                <form action="/articles" method="POST" enctype="multipart/form-data">
                    <label for="name">Name:</label>
                    <input type="text" id="name" name="name" required>

                    <label for="codeArticle">Code Article:</label>
                    <input type="text" id="codeArticle" name="codeArticle" required>

                    <label for="description">Description:</label>
                    <textarea id="description" name="description" required></textarea>

                    <label for="price">Price:</label>
                    <input type="number" id="price" name="price" step="0.01" required>

                    <label for="quantity">Quantity:</label>
                    <input type="number" id="quantity" name="quantity" required>

                    <label for="releaseDate">Date de sortie:</label>
                    <input type="date" id="releaseDate" name="releaseDate" required>

                    <label for="platforms">Plateformes (séparées par des virgules):</label>
                    <input type="text" id="platforms" name="platforms" required>

                    <label for="genres">Genres (séparés par des virgules):</label>
                    <input type="text" id="genres" name="genres" required>

                    <label for="imageType">Image Type:</label>
                    <select id="imageType" name="imageType" required>
                        <option value="file">File</option>
                        <option value="url">URL</option>
                    </select>

                    <div id="fileInput" style="display: none;">
                        <label for="imageFile">Image File:</label>
                        <input type="file" id="imageFile" name="imageFile">
                    </div>

                    <div id="urlInput" style="display: none;">
                        <label for="imageUrl">Image URL:</label>
                        <input type="text" id="imageUrl" name="imageUrl">
                    </div>

                    <button type="submit">Create Article</button>
                </form>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('imageType').addEventListener('change', function() {
            const fileInput = document.getElementById('fileInput');
            const urlInput = document.getElementById('urlInput');
            if (this.value === 'file') {
                fileInput.style.display = 'block';
                urlInput.style.display = 'none';
            } else {
                fileInput.style.display = 'none';
                urlInput.style.display = 'block';
            }
        });

        async function searchGames() {
            const query = document.getElementById('gameSearch').value;
            const response = await fetch(`/articles/search-games?q=${encodeURIComponent(query)}`);
            const games = await response.json();
            
            console.log('Games received:', games); // Pour déboguer

            const resultsDiv = document.getElementById('searchResults');
            resultsDiv.innerHTML = '';
            
            games.forEach(game => {
                const gameDiv = document.createElement('div');
                gameDiv.className = 'game-card';
                
                // Utilisez directement l'URL de l'image fournie par l'API
                const coverUrl = game.cover;
                
                console.log('URL de couverture utilisée:', coverUrl); // Pour déboguer

                // Créez un bouton avec des attributs de données
                const button = document.createElement('button');
                button.textContent = 'Use This Game';
                button.type = 'button';
                
                // Ajoutez des attributs de données pour stocker les informations du jeu
                button.setAttribute('data-name', game.name);
                button.setAttribute('data-summary', game.summary || '');
                button.setAttribute('data-cover', coverUrl);
                button.setAttribute('data-release-date', game.releaseDate || '');
                button.setAttribute('data-platforms', game.platforms ? game.platforms.join(', ') : '');
                button.setAttribute('data-genres', game.genres ? game.genres.join(', ') : '');
                
                // Ajoutez un écouteur d'événements pour le clic
                button.addEventListener('click', function() {
                    fillForm(
                        this.getAttribute('data-name'),
                        this.getAttribute('data-summary'),
                        this.getAttribute('data-cover'),
                        this.getAttribute('data-release-date'),
                        this.getAttribute('data-platforms'),
                        this.getAttribute('data-genres')
                    );
                });

                gameDiv.innerHTML = `
                    <img src="${coverUrl}" alt="${game.name}" onerror="this.src='/images/default.png';">
                    <h3>${game.name}</h3>
                `;
                gameDiv.appendChild(button);
                resultsDiv.appendChild(gameDiv);
            });
        }
        
        function fillForm(name, summary, imageUrl, releaseDate, platforms, genres) {
            console.log('Données reçues dans fillForm:', { name, summary, imageUrl, releaseDate, platforms, genres }); // Pour déboguer
            document.getElementById('name').value = name;
            document.getElementById('description').value = summary;
            document.getElementById('imageType').value = 'url';
            document.getElementById('imageUrl').value = imageUrl;
            document.getElementById('releaseDate').value = releaseDate;
            document.getElementById('platforms').value = platforms;
            document.getElementById('genres').value = genres;

            document.getElementById('urlInput').style.display = 'block';
            document.getElementById('fileInput').style.display = 'none';

            document.querySelector('.container-form').scrollIntoView({ behavior: 'smooth' });
        }
    </script>
</body>
</html>